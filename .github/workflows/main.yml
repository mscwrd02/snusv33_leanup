name: Deploy NestJS Application

# main 브랜치로 push 혹은 pr이 날라와서 merge되면 workflow가 작동합니다.
# workflow_dispatch는 수동으로 workflow를 작동시키도록 할 수 있도록 합니다.
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

  workflow_dispatch:

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: mscwrd02-github-action-s3-bucket
  PROJECT_NAME: my-nest-pp
  AWS_CODEDEPLOY_APPLICATION_NAME: my-snusv33_leanup_app
  AWS_CODEDEPLOY_DEPLOYMENT_GROUP_NAME: my-codedeploy-deployment-group

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 해당 workflow가 레포지토리에 접근할 수 있도록 해줍니다.
      # 우리는 레포지토리의 소스를 빌드해야하기 때문에 이 액션을 사용해야합니다.
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Dependency들을 설치합니다. yarn도 사용 가능합니다.
      - name: Install Dependencies
        run: |
          cd backend
          npm ci

      # NestJS Application을 빌드합니다.
      - name: Build a Nest Application
        run: |
          cd backend
          npm run build
        shell: bash

      # 레포지토리를 압축시킵니다.
      # 다만 불필요한 node_module, coverage, src, test, readme, .git* 등의 파일은 제외시킵니다.
      - name: Make a zip file
        run: |
          cd backend
          zip -r ../$GITHUB_SHA.zip . -x "node_modules/*" "coverage/*" "src/*" "test/*" "README.md" "*.git*"
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 위에서 만든 zip 파일을 S3에 업로드 합니다.
      - name: Upload to S3
        run: aws s3 cp --region ${{ env.AWS_REGION }} ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

      # CodeDeploy에게 deployment를 생성하도록 요청합니다.
      - name: Request Deployment
        run: aws deploy create-deployment --application-name ${{ env.AWS_CODEDEPLOY_APPLICATION_NAME }} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{ env.AWS_CODEDEPLOY_DEPLOYMENT_GROUP_NAME }} --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip --region ${{ env.AWS_REGION }}
